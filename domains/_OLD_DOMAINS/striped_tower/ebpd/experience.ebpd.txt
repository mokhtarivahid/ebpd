;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

(define (experience stack)
  (:domain striped_tower)
  (:episode_id s10)
  (:task stack
   :parameters (t1 p2)
   :key-propositions
       ((init(top pallet1 p1))
        (init(top pallet2 p2))
        (init(ontable r1 t1))
        (init(ontable r2 t1))
        (init(ontable r3 t1))
        (init(ontable r4 t1))
        (init(ontable r5 t1))
        (init(ontable b1 t1))
        (init(ontable b2 t1))
        (init(ontable b3 t1))
        (init(ontable b4 t1))
        (init(ontable b5 t1))
        (init(at h1 p1))
        (init(empty h1))
        (static(pile p1))
        (static(pile p2))
        (static(table t1))
        (static(attached p1 l1))
        (static(attached p2 l1))
        (static(attached t1 l1))
        (static(belong h1 l1))
        (static(pallet pallet1))
        (static(pallet pallet2))
        (static(base r1))
        (static(red r1))
        (static(red r2))
        (static(red r3))
        (static(red r4))
        (static(red r5))
        (static(blue b1))
        (static(blue b2))
        (static(blue b3))
        (static(blue b4))
        (static(blue b5))
        (end(top pallet1 p1))
        (end(top b5 p2))
        (end(in r1 p2))
        (end(in r2 p2))
        (end(in r3 p2))
        (end(in r4 p2))
        (end(in r5 p2))
        (end(in b1 p2))
        (end(in b2 p2))
        (end(in b3 p2))
        (end(in b4 p2))
        (end(in b5 p2))
        (end(on r1 pallet2))
        (end(on b1 r1))
        (end(on r2 b1))
        (end(on b2 r2))
        (end(on r3 b2))
        (end(on b3 r3))
        (end(on r4 b3))
        (end(on b4 r4))
        (end(on r5 b4))
        (end(on b5 r5)))
   :plan
       ((move h1 p1 p2 l1)
        (move h1 p2 t1 l1)
        (pickup h1 r1 t1 l1)
        (move h1 t1 p2 l1)
        (stack h1 r1 pallet2 p2 l1)
        (move h1 p2 t1 l1)
        (pickup h1 b1 t1 l1)
        (move h1 t1 p2 l1)
        (stack h1 b1 r1 p2 l1)
        (move h1 p2 t1 l1)
        (pickup h1 r2 t1 l1)
        (move h1 t1 p2 l1)
        (stack h1 r2 b1 p2 l1)
        (move h1 p2 t1 l1)
        (pickup h1 b2 t1 l1)
        (move h1 t1 p2 l1)
        (stack h1 b2 r2 p2 l1)
        (move h1 p2 t1 l1)
        (pickup h1 r3 t1 l1)
        (move h1 t1 p2 l1)
        (stack h1 r3 b2 p2 l1)
        (move h1 p2 t1 l1)
        (pickup h1 b3 t1 l1)
        (move h1 t1 p2 l1)
        (stack h1 b3 r3 p2 l1)
        (move h1 p2 t1 l1)
        (pickup h1 r4 t1 l1)
        (move h1 t1 p2 l1)
        (stack h1 r4 b3 p2 l1)
        (move h1 p2 t1 l1)
        (pickup h1 b4 t1 l1)
        (move h1 t1 p2 l1)
        (stack h1 b4 r4 p2 l1)
        (move h1 p2 t1 l1)
        (pickup h1 r5 t1 l1)
        (move h1 t1 p2 l1)
        (stack h1 r5 b4 p2 l1)
        (move h1 p2 t1 l1)
        (pickup h1 b5 t1 l1)
        (move h1 t1 p2 l1)
        (stack h1 b5 r5 p2 l1))))

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

(define (experience unstack_stack)
  (:domain striped_tower)
  (:episode_id us10)
  (:task unstack_stack
   :parameters (p1 p2)
   :key-propositions
       ((init(top pallet2 p2))
        (init(top b5 p1))
        (init(in r1 p1))
        (init(in r2 p1))
        (init(in r3 p1))
        (init(in r4 p1))
        (init(in r5 p1))
        (init(in b1 p1))
        (init(in b2 p1))
        (init(in b3 p1))
        (init(in b4 p1))
        (init(in b5 p1))
        (init(on r1 pallet1))
        (init(on r2 r1))
        (init(on r3 r2))
        (init(on r4 r3))
        (init(on r5 r4))
        (init(on b1 r5))
        (init(on b2 b1))
        (init(on b3 b2))
        (init(on b4 b3))
        (init(on b5 b4))
        (init(at h1 t1))
        (init(empty h1))
        (static(pile p1))
        (static(pile p2))
        (static(table t1))
        (static(attached p1 l1))
        (static(attached p2 l1))
        (static(attached t1 l1))
        (static(belong h1 l1))
        (static(pallet pallet1))
        (static(pallet pallet2))
        (static(base r1))
        (static(red r1))
        (static(red r2))
        (static(red r3))
        (static(red r4))
        (static(red r5))
        (static(blue b1))
        (static(blue b2))
        (static(blue b3))
        (static(blue b4))
        (static(blue b5))
        (end(top pallet1 p1))
        (end(top b5 p2))
        (end(in r1 p2))
        (end(in r2 p2))
        (end(in r3 p2))
        (end(in r4 p2))
        (end(in r5 p2))
        (end(in b1 p2))
        (end(in b2 p2))
        (end(in b3 p2))
        (end(in b4 p2))
        (end(in b5 p2))
        (end(on r1 pallet2))
        (end(on b1 r1))
        (end(on r2 b1))
        (end(on b2 r2))
        (end(on r3 b2))
        (end(on b3 r3))
        (end(on r4 b3))
        (end(on b4 r4))
        (end(on r5 b4))
        (end(on b5 r5)))
   :plan
       ((move h1 t1 p1 l1)
        (unstack h1 b5 b4 p1 l1)
        (move h1 p1 t1 l1)
        (putdown h1 b5 t1 l1)
        (move h1 t1 p1 l1)
        (unstack h1 b4 b3 p1 l1)
        (move h1 p1 t1 l1)
        (putdown h1 b4 t1 l1)
        (move h1 t1 p1 l1)
        (unstack h1 b3 b2 p1 l1)
        (move h1 p1 t1 l1)
        (putdown h1 b3 t1 l1)
        (move h1 t1 p1 l1)
        (unstack h1 b2 b1 p1 l1)
        (move h1 p1 t1 l1)
        (putdown h1 b2 t1 l1)
        (move h1 t1 p1 l1)
        (unstack h1 b1 r5 p1 l1)
        (move h1 p1 t1 l1)
        (putdown h1 b1 t1 l1)
        (move h1 t1 p1 l1)
        (unstack h1 r5 r4 p1 l1)
        (move h1 p1 t1 l1)
        (putdown h1 r5 t1 l1)
        (move h1 t1 p1 l1)
        (unstack h1 r4 r3 p1 l1)
        (move h1 p1 t1 l1)
        (putdown h1 r4 t1 l1)
        (move h1 t1 p1 l1)
        (unstack h1 r3 r2 p1 l1)
        (move h1 p1 t1 l1)
        (putdown h1 r3 t1 l1)
        (move h1 t1 p1 l1)
        (unstack h1 r2 r1 p1 l1)
        (move h1 p1 t1 l1)
        (putdown h1 r2 t1 l1)
        (move h1 t1 p1 l1)
        (unstack h1 r1 pallet1 p1 l1)
        (move h1 p1 p2 l1)
        (stack h1 r1 pallet2 p2 l1)
        (move h1 p2 t1 l1)
        (pickup h1 b1 t1 l1)
        (move h1 t1 p2 l1)
        (stack h1 b1 r1 p2 l1)
        (move h1 p2 t1 l1)
        (pickup h1 r2 t1 l1)
        (move h1 t1 p2 l1)
        (stack h1 r2 b1 p2 l1)
        (move h1 p2 t1 l1)
        (pickup h1 b2 t1 l1)
        (move h1 t1 p2 l1)
        (stack h1 b2 r2 p2 l1)
        (move h1 p2 t1 l1)
        (pickup h1 r3 t1 l1)
        (move h1 t1 p2 l1)
        (stack h1 r3 b2 p2 l1)
        (move h1 p2 t1 l1)
        (pickup h1 b3 t1 l1)
        (move h1 t1 p2 l1)
        (stack h1 b3 r3 p2 l1)
        (move h1 p2 t1 l1)
        (pickup h1 r4 t1 l1)
        (move h1 t1 p2 l1)
        (stack h1 r4 b3 p2 l1)
        (move h1 p2 t1 l1)
        (pickup h1 b4 t1 l1)
        (move h1 t1 p2 l1)
        (stack h1 b4 r4 p2 l1)
        (move h1 p2 t1 l1)
        (pickup h1 r5 t1 l1)
        (move h1 t1 p2 l1)
        (stack h1 r5 b4 p2 l1)
        (move h1 p2 t1 l1)
        (pickup h1 b5 t1 l1)
        (move h1 t1 p2 l1)
        (stack h1 b5 r5 p2 l1))))
