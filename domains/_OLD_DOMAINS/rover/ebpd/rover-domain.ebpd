(define (domain rover)
  (:requirements :typing)
  (:types rover waypoint store camera mode lander objective)
  (:predicates 
      (at_lander ?x - lander ?y - waypoint)
      (can_traverse ?r - rover ?x - waypoint ?y - waypoint)
      (equipped_for_soil_analysis ?r - rover)
      (equipped_for_rock_analysis ?r - rover)
      (equipped_for_imaging ?r - rover)
      (supports ?c - camera ?m - mode)
      (visible ?w - waypoint ?p - waypoint)
      (visible_from ?o - objective ?w - waypoint)
      (store_of ?s - store ?r - rover)
      (calibration_target ?i - camera ?o - objective)
      (on_board ?i - camera ?r - rover)

      (at ?x - rover ?y - waypoint) 
      (empty ?s - store)
      (have_rock_analysis ?r - rover ?w - waypoint)
      (have_soil_analysis ?r - rover ?w - waypoint)
      (full ?s - store)
      (calibrated ?c - camera ?r - rover) 
      (available ?r - rover)
      (have_image ?r - rover ?o - objective ?m - mode)
      (communicated_soil_data ?w - waypoint)
      (communicated_rock_data ?w - waypoint)
      (communicated_image_data ?o - objective ?m - mode)
      (at_soil_sample ?w - waypoint)
      (at_rock_sample ?w - waypoint)
      (channel_free ?l - lander))
  
  (:action navigate
      :parameters   (?x - rover ?y - waypoint ?z - waypoint) 
      :parent       (nil ())
      :static       (and
                        (can_traverse ?x ?y ?z) 
                        (visible ?y ?z))
      :precondition (and 
                        (available ?x) 
                        (at ?x ?y))
      :effect       (and 
                        (not (at ?x ?y)) 
                        (at ?x ?z)))

  (:action sample_soil
      :parameters   (?x - rover ?s - store ?p - waypoint)
      :parent       (sample ?x ?p)
      :static       (and
                        (equipped_for_soil_analysis ?x) 
                        (store_of ?s ?x))
      :precondition (and 
                        (at ?x ?p) 
                        (at_soil_sample ?p) 
                        (empty ?s))
      :effect       (and 
                        (not (empty ?s)) 
                        (full ?s) 
                        (have_soil_analysis ?x ?p) 
                        (not (at_soil_sample ?p))))

  (:action sample_rock
      :parameters   (?x - rover ?s - store ?p - waypoint)
      :parent       (sample ?x ?p)
      :static       (and
                        (equipped_for_rock_analysis ?x) 
                        (store_of ?s ?x))
      :precondition (and 
                        (at ?x ?p) 
                        (at_rock_sample ?p) 
                        (empty ?s))
      :effect       (and 
                        (not (empty ?s)) 
                        (full ?s) 
                        (have_rock_analysis ?x ?p) 
                        (not (at_rock_sample ?p))))

  (:action drop
      :parameters   (?x - rover ?y - store)
      :parent       (nil ())
      :static       (store_of ?y ?x) 
      :precondition (full ?y)
      :effect       (and 
                        (not (full ?y)) 
                        (empty ?y)))

  (:action calibrate
      :parameters   (?r - rover ?i - camera ?t - objective ?w - waypoint)
      :parent       (nil ())
      :static       (and
                        (equipped_for_imaging ?r) 
                        (calibration_target ?i ?t) 
                        (visible_from ?t ?w)
                        (on_board ?i ?r))
      :precondition (at ?r ?w)
      :effect       (calibrated ?i ?r))

  (:action take_image
      :parameters   (?r - rover ?p - waypoint ?o - objective ?i - camera ?m - mode)
      :parent       (take ?r ?p ?o ?m)
      :static       (and
                        (on_board ?i ?r)
                        (equipped_for_imaging ?r)
                        (supports ?i ?m)
                        (visible_from ?o ?p))
      :precondition (and 
                        (calibrated ?i ?r)
                        (at ?r ?p))
      :effect       (and 
                        (have_image ?r ?o ?m)
                        (not (calibrated ?i ?r))))

  (:action communicate_soil_data
      :parameters   (?r - rover ?l - lander ?p - waypoint ?x - waypoint ?y - waypoint)
      :parent       (communicate ?r ?p)
      :static       (and
                        (at_lander ?l ?y)
                        (visible ?x ?y))
      :precondition (and 
                        (at ?r ?x)
                        (have_soil_analysis ?r ?p) 
                        (available ?r)
                        (channel_free ?l))
      :effect       (and 
                        (not (available ?r))
                        (not (channel_free ?l))
                        (channel_free ?l)
                        (communicated_soil_data ?p)
                        (available ?r)))

  (:action communicate_rock_data
      :parameters   (?r - rover ?l - lander ?p - waypoint ?x - waypoint ?y - waypoint)
      :parent       (communicate ?r ?p)
      :static       (and
                        (at_lander ?l ?y)
                        (visible ?x ?y))
      :precondition (and 
                        (at ?r ?x)
                        (have_rock_analysis ?r ?p)
                        (available ?r)
                        (channel_free ?l))
      :effect       (and 
                        (not (available ?r))
                        (not (channel_free ?l))
                        (channel_free ?l)
                        (communicated_rock_data ?p)
                        (available ?r)))

  (:action communicate_image_data
      :parameters   (?r - rover ?l - lander ?o - objective ?m - mode ?x - waypoint ?y - waypoint)
      :parent       (communicate ?r ?o ?m)
      :static       (and
                        (at_lander ?l ?y)
                        (visible ?x ?y))
      :precondition (and 
                        (at ?r ?x)
                        (have_image ?r ?o ?m)
                        (available ?r)
                        (channel_free ?l))
      :effect       (and 
                        (not (available ?r))
                        (not (channel_free ?l))
                        (channel_free ?l)
                        (communicated_image_data ?o ?m)
                        (available ?r)))
)