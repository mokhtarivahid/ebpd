:-assert(robot_activity_experience(
  p10,    %% episode ID
  stripped_tower,    %% domain
  [
    stack(t1,p2),    %% task
    [        %% key propositions
        at_start(top(pallet1,p1)),
        at_start(top(pallet2,p2)),
        at_start(ontable(r1,t1)),
        at_start(ontable(r2,t1)),
        at_start(ontable(r3,t1)),
        at_start(ontable(r4,t1)),
        at_start(ontable(r5,t1)),
        at_start(ontable(b1,t1)),
        at_start(ontable(b2,t1)),
        at_start(ontable(b3,t1)),
        at_start(ontable(b4,t1)),
        at_start(ontable(b5,t1)),
        at_start(at(h1,p1)),
        at_start(empty(h1)),
        throughout(pile(p1)),
        throughout(pile(p2)),
        throughout(table(t1)),
        throughout(attached(p1,l1)),
        throughout(attached(p2,l1)),
        throughout(attached(t1,l1)),
        throughout(belong(h1,l1)),
        throughout(pallet(pallet1)),
        throughout(pallet(pallet2)),
        throughout(base(r1)),
        throughout(red(r1)),
        throughout(red(r2)),
        throughout(red(r3)),
        throughout(red(r4)),
        throughout(red(r5)),
        throughout(blue(b1)),
        throughout(blue(b2)),
        throughout(blue(b3)),
        throughout(blue(b4)),
        throughout(blue(b5)),
        at_end(top(pallet1,p1)),
        at_end(top(b5,p2)),
        at_end(in(r1,p2)),
        at_end(in(r2,p2)),
        at_end(in(r3,p2)),
        at_end(in(r4,p2)),
        at_end(in(r5,p2)),
        at_end(in(b1,p2)),
        at_end(in(b2,p2)),
        at_end(in(b3,p2)),
        at_end(in(b4,p2)),
        at_end(in(b5,p2)),
        at_end(on(r1,pallet2)),
        at_end(on(b1,r1)),
        at_end(on(r2,b1)),
        at_end(on(b2,r2)),
        at_end(on(r3,b2)),
        at_end(on(b3,r3)),
        at_end(on(r4,b3)),
        at_end(on(b4,r4)),
        at_end(on(r5,b4)),
        at_end(on(b5,r5))
    ],
    none,               %% failed operation
    race_dummy,         %% failure type
    [
        move(h1, p1, p2, l1),
        move(h1, p2, t1, l1),
        pickup(h1, r1, t1, l1),
        move(h1, t1, p2, l1),
        stack(h1, r1, pallet2, p2, l1),
        move(h1, p2, t1, l1),
        pickup(h1, b1, t1, l1),
        move(h1, t1, p2, l1),
        stack(h1, b1, r1, p2, l1),
        move(h1, p2, t1, l1),
        pickup(h1, r2, t1, l1),
        move(h1, t1, p2, l1),
        stack(h1, r2, b1, p2, l1),
        move(h1, p2, t1, l1),
        pickup(h1, b2, t1, l1),
        move(h1, t1, p2, l1),
        stack(h1, b2, r2, p2, l1),
        move(h1, p2, t1, l1),
        pickup(h1, r3, t1, l1),
        move(h1, t1, p2, l1),
        stack(h1, r3, b2, p2, l1),
        move(h1, p2, t1, l1),
        pickup(h1, b3, t1, l1),
        move(h1, t1, p2, l1),
        stack(h1, b3, r3, p2, l1),
        move(h1, p2, t1, l1),
        pickup(h1, r4, t1, l1),
        move(h1, t1, p2, l1),
        stack(h1, r4, b3, p2, l1),
        move(h1, p2, t1, l1),
        pickup(h1, b4, t1, l1),
        move(h1, t1, p2, l1),
        stack(h1, b4, r4, p2, l1),
        move(h1, p2, t1, l1),
        pickup(h1, r5, t1, l1),
        move(h1, t1, p2, l1),
        stack(h1, r5, b4, p2, l1),
        move(h1, p2, t1, l1),
        pickup(h1, b5, t1, l1),
        move(h1, t1, p2, l1),
        stack(h1, b5, r5, p2, l1)
    ]
  ]
)).
